#!/bin/bash

# Check if the script is run as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root or using sudo."
  exit 1
fi

# Set user variable
user=$(ls /home)

# Set timezone
timedatectl set-timezone Australia/Sydney

# Update package lists
echo "***Updating packages***"
apt update

# Upgrade packages
echo "***Installing updates***"
apt full-upgrade -y

# Install required packages
echo "***Installing additional packages***"
apt install linux-headers-$(uname -r) terminator bloodhound realtek-rtl88xxau-dkms -y

# Remove packages that are no longer required
echo "***Removing packages that are no longer required***"
apt autoremove -y

# Configure SSH
echo "***Configuring SSH access***"

# Create the directory and import public key
mkdir /home/$user/.ssh
curl https://raw.githubusercontent.com/DaneSerpente/Pentesting/main/Build_Scripts/Files/pentest_rsa.pub > /home/$user/.ssh/authorized_keys

# Find pubkey and password lines in SSH config and configure key-based auth only
pkauth=$(grep -n "PubkeyAuthentication" "/etc/ssh/sshd_config" | awk -F: '{print $1}')
passauth=$(grep -n "PasswordAuthentication" "/etc/ssh/sshd_config" | awk -F: '{print $1}')
sed -i "$pkauths/.*/PubkeyAuthentication yes/" "/etc/ssh/sshd_config"
sed -i "$passauths/.*/PasswordAuthenticaiton no/" "/etc/ssh/sshd_config"

# Enable and start SSH server
systemctl enable ssh
systemctl start ssh

# Add ZSH customisation
curl https://raw.githubusercontent.com/DaneSerpente/Pentesting/main/Build_Scripts/Files/zshrc > /home/$user/.zshrc
curl https://raw.githubusercontent.com/DaneSerpente/Pentesting/main/Build_Scripts/Files/zshrc > /root/.zshrc

# Clone GitHub Repos
echo "***Cloning GitHub Repositories***"
git clone https://github.com/D3Ext/WEF.git /opt/github/WEF
git clone https://github.com/derv82/wifite2.git /opt/github/wifite2